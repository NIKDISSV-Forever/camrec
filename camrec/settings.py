"""
Django settings for camrec project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import shutil
from pathlib import Path
from collections import namedtuple

from django.utils.translation import gettext_lazy as _
from dotenv import load_dotenv

if os.name == 'nt':
    if not hasattr(nt := __import__('nt'), '_getdiskusage'):  # for example, PyPy impl may not have
        def _getdiskusage(path):
            ctypes.windll.kernel32.GetDiskFreeSpaceExW(
                ctypes.c_wchar_p(os.fspath(path)),
                ctypes.byref(ctypes.c_ulonglong()),
                ctypes.byref(total := ctypes.c_ulonglong()), ctypes.byref(free := ctypes.c_ulonglong())
            )
            return total.value, free.value


        nt._getdiskusage = _getdiskusage
        import ctypes

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
LOGFILE = BASE_DIR / 'logs' / 'recording.log'
SEGMENT_FORMAT = 'ts'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']
FIELD_ENCRYPTION_KEY = os.environ['FIELD_ENCRYPTION_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
try:
    import jazzmin as _
except ModuleNotFoundError:
    JAZZMIN = False
else:
    JAZZMIN = os.environ.get('JAZZMIN', '').strip().casefold() in {'true', '1'}
ALLOWED_HOSTS = ['*']
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_cryptography',
    'recorder.apps.RecorderConfig',
]
if JAZZMIN:
    INSTALLED_APPS.insert(0, 'jazzmin')
JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": True,
    "footer_small_text": True,
    "brand_small_text": True,
    # "theme": "superhero",
    # "navbar": "navbar-dark",
}
JAZZMIN_SETTINGS = {
    # "show_ui_builder": True,
    "language_chooser": True,
    "site_title": "Система записи",
    "site_header": "Контроль камер",
    "site_brand": "Контроль камер",
    "welcome_sign": "",
    "login_logo": ".",
    "copyright": "n.denissov@ppa.kz",

    # Изменить иконки для моделей
    "icons": {
        "auth.User": "fas fa-user",
        "auth.Group": "fas fa-users",
        "recorder.Stream": "fas fa-video",
        "recorder.System": "fas fa-cogs",
        "admin.LogEntry": "fas fa-file-alt",
        "sessions.Session": "fas fa-satellite-dish",
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
ROOT_URLCONF = 'camrec.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'camrec.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'static'
LOGIN_URL = 'admin:login'
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
